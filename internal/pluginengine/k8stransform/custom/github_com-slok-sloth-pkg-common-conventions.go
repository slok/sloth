// Code generated by 'yaegi extract github.com/slok/sloth/pkg/common/conventions'. DO NOT EDIT.

package custom

import (
	"github.com/slok/sloth/pkg/common/conventions"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/slok/sloth/pkg/common/conventions/conventions"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"GetSLIErrorMetric":                                reflect.ValueOf(conventions.GetSLIErrorMetric),
		"GetSLOIDPromLabels":                               reflect.ValueOf(conventions.GetSLOIDPromLabels),
		"NameRegexp":                                       reflect.ValueOf(&conventions.NameRegexp).Elem(),
		"PromMetaSLOCurrentBurnRateRatioMetric":            reflect.ValueOf(constant.MakeFromLiteral("\"slo:current_burn_rate:ratio\"", token.STRING, 0)),
		"PromMetaSLOErrorBudgetRatioMetric":                reflect.ValueOf(constant.MakeFromLiteral("\"slo:error_budget:ratio\"", token.STRING, 0)),
		"PromMetaSLOInfoMetric":                            reflect.ValueOf(constant.MakeFromLiteral("\"sloth_slo_info\"", token.STRING, 0)),
		"PromMetaSLOObjectiveRatioMetric":                  reflect.ValueOf(constant.MakeFromLiteral("\"slo:objective:ratio\"", token.STRING, 0)),
		"PromMetaSLOPeriodBurnRateRatioMetric":             reflect.ValueOf(constant.MakeFromLiteral("\"slo:period_burn_rate:ratio\"", token.STRING, 0)),
		"PromMetaSLOPeriodErrorBudgetRemainingRatioMetric": reflect.ValueOf(constant.MakeFromLiteral("\"slo:period_error_budget_remaining:ratio\"", token.STRING, 0)),
		"PromMetaSLOTimePeriodDaysMetric":                  reflect.ValueOf(constant.MakeFromLiteral("\"slo:time_period:days\"", token.STRING, 0)),
		"PromRuleGroupNameSLOAlertsPrefix":                 reflect.ValueOf(constant.MakeFromLiteral("\"sloth-slo-alerts-\"", token.STRING, 0)),
		"PromRuleGroupNameSLOExtraRulesPrefix":             reflect.ValueOf(constant.MakeFromLiteral("\"sloth-slo-extra-rules-\"", token.STRING, 0)),
		"PromRuleGroupNameSLOMetadataPrefix":               reflect.ValueOf(constant.MakeFromLiteral("\"sloth-slo-meta-recordings-\"", token.STRING, 0)),
		"PromRuleGroupNameSLOSLIPrefix":                    reflect.ValueOf(constant.MakeFromLiteral("\"sloth-slo-sli-recordings-\"", token.STRING, 0)),
		"PromSLIErrorMetricFmt":                            reflect.ValueOf(constant.MakeFromLiteral("\"slo:sli_error:ratio_rate%s\"", token.STRING, 0)),
		"PromSLOIDLabelName":                               reflect.ValueOf(constant.MakeFromLiteral("\"sloth_id\"", token.STRING, 0)),
		"PromSLOModeLabelName":                             reflect.ValueOf(constant.MakeFromLiteral("\"sloth_mode\"", token.STRING, 0)),
		"PromSLONameLabelName":                             reflect.ValueOf(constant.MakeFromLiteral("\"sloth_slo\"", token.STRING, 0)),
		"PromSLOObjectiveLabelName":                        reflect.ValueOf(constant.MakeFromLiteral("\"sloth_objective\"", token.STRING, 0)),
		"PromSLOServiceLabelName":                          reflect.ValueOf(constant.MakeFromLiteral("\"sloth_service\"", token.STRING, 0)),
		"PromSLOSeverityLabelName":                         reflect.ValueOf(constant.MakeFromLiteral("\"sloth_severity\"", token.STRING, 0)),
		"PromSLOSpecLabelName":                             reflect.ValueOf(constant.MakeFromLiteral("\"sloth_spec\"", token.STRING, 0)),
		"PromSLOVersionLabelName":                          reflect.ValueOf(constant.MakeFromLiteral("\"sloth_version\"", token.STRING, 0)),
		"PromSLOWindowLabelName":                           reflect.ValueOf(constant.MakeFromLiteral("\"sloth_window\"", token.STRING, 0)),
		"TplSLIQueryWindowVarName":                         reflect.ValueOf(&conventions.TplSLIQueryWindowVarName).Elem(),
		"TplSLIQueryWindowVarRegex":                        reflect.ValueOf(&conventions.TplSLIQueryWindowVarRegex).Elem(),
	}
}
