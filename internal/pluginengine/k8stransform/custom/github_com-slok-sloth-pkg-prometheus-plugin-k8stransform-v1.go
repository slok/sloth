// Code generated by 'yaegi extract github.com/slok/sloth/pkg/prometheus/plugin/k8stransform/v1'. DO NOT EDIT.

package custom

import (
	"context"
	"github.com/slok/sloth/pkg/common/model"
	"github.com/slok/sloth/pkg/prometheus/plugin/k8stransform/v1"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/slok/sloth/pkg/prometheus/plugin/k8stransform/v1/v1"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"PluginFactoryName": reflect.ValueOf(constant.MakeFromLiteral("\"NewPlugin\"", token.STRING, 0)),
		"PluginIDName":      reflect.ValueOf(constant.MakeFromLiteral("\"PluginID\"", token.STRING, 0)),
		"PluginVersionName": reflect.ValueOf(constant.MakeFromLiteral("\"PluginVersion\"", token.STRING, 0)),
		"Version":           reflect.ValueOf(constant.MakeFromLiteral("\"prometheus/k8stransform/v1\"", token.STRING, 0)),

		// type definitions
		"K8sObjects":    reflect.ValueOf((*v1.K8sObjects)(nil)),
		"Plugin":        reflect.ValueOf((*v1.Plugin)(nil)),
		"PluginFactory": reflect.ValueOf((*v1.PluginFactory)(nil)),
		"PluginID":      reflect.ValueOf((*v1.PluginID)(nil)),
		"PluginVersion": reflect.ValueOf((*v1.PluginVersion)(nil)),

		// interface wrapper definitions
		"_Plugin": reflect.ValueOf((*_github_com_slok_sloth_pkg_prometheus_plugin_k8stransform_v1_Plugin)(nil)),
	}
}

// _github_com_slok_sloth_pkg_prometheus_plugin_k8stransform_v1_Plugin is an interface wrapper for Plugin type
type _github_com_slok_sloth_pkg_prometheus_plugin_k8stransform_v1_Plugin struct {
	IValue               interface{}
	WTransformK8sObjects func(ctx context.Context, kmeta model.K8sMeta, sloResult model.PromSLOGroupResult) (*v1.K8sObjects, error)
}

func (W _github_com_slok_sloth_pkg_prometheus_plugin_k8stransform_v1_Plugin) TransformK8sObjects(ctx context.Context, kmeta model.K8sMeta, sloResult model.PromSLOGroupResult) (*v1.K8sObjects, error) {
	return W.WTransformK8sObjects(ctx, kmeta, sloResult)
}
